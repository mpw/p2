/* $Id: orderby-part.p2,v 45.0 1997/09/19 05:43:55 jthomas Exp $ */

#include <stdio.h>
#include "P2_paces.h"

#define ALL_CURSORS 0
#define ALL_DATA    0
#define DELETE      1
#define PART        1
#define MLIST       0
#define ORDERBY     1

typedef struct 
{
   int   empno;
   int   age;
   char  dept_name[20];
   char  name[22];
} EMP_TYPE;

EMP_TYPE rawdata[] = {
  { 10000,60,"Biology","Akers, Mark" },
  { 10070,22,"Biology","Andrews, Kay" },
  { 10040,53,"Biology","Anderson, Mary" },
  { 10060,61,"Biology","Andrews, John" },
#if ALL_DATA
  { 10020,21,"Biology","Alexander, Joe" },
  { 10010,42,"Biology","Akin, Monica" },
  { 10030,23,"Biology","Anderson, Gwyn" },
  { 10050,42,"Biology","Anderson, Suzanne" },
#endif
  { -1 }
};

typex {
#if PART
#if MLIST
#if 0
   t = top2ds[inbetween[qualify[mlist[part[top2ds[inbetween[qualify[delflag[array1[transient]]]]],
					  top2ds[inbetween[qualify[delflag[array2[transient]]]]]],
				     top2ds[inbetween[qualify[delflag[array3[transient]]]]]]]]];
#else
   t = conceptual[mlist[part[conceptual[delflag[array1[transient]]],
			    conceptual[delflag[array2[transient]]]],
		       conceptual[delflag[array3[transient]]]]];
#endif
#else
   t = conceptual[part[conceptual[delflag[array1[transient]]],
		      conceptual[delflag[array2[transient]]]]];
#if 0
BUG
   t = top2ds[part[top2ds[named_funcall[array1[transient]]],
		  top2ds[named_funcall[array2[transient]]]]];
   t = top2ds[part[top2ds[named_funcall[array1[transient]]],
		  top2ds[array2[transient]]]];
NO BUG
   t = top2ds[part[top2ds[array1[transient]],
		  top2ds[array2[transient]]]];
   t = top2ds[part[top2ds[qualify[array1[transient]]],
		  top2ds[qualify[array2[transient]]]]];
   t = top2ds[part[top2ds[inbetween[array1[transient]]],
		  top2ds[inbetween[array2[transient]]]]];
   t = top2ds[part[top2ds[init_generic[array1[transient]]],
		  top2ds[init_generic[array2[transient]]]]];
   t = top2ds[part[top2ds[generic[array1[transient]]],
		  top2ds[generic[array2[transient]]]]];
   t = top2ds[part[top2ds[array1[transient]],
		  top2ds[named_funcall[array2[transient]]]]];
#endif
#endif
#else
#if MLIST
   t = conceptual[mlist[delflag[array1[transient]]],
			    conceptual[delflag[array2[transient]]]];
#else
   t = conceptual[delflag[array1[transient]]];
#endif
#endif
}

container <EMP_TYPE> stored_as t with {
  array1 size is 30;
#if PART || MLIST 
  array2 size is 30;
#endif
#if PART && MLIST
  array3 size is 30;
#endif
#if PART
  part at field age;
#endif
#if MLIST
  mlist on age;
#if 0
  mlist on dept_name;
#endif
#endif
} emp_cont;

cursor <emp_cont>
  where "$.age > 40"
#if ORDERBY
  orderby P2_ASCENDING empno
#endif
old_emp;

#if ALL_CURSORS

cursor <emp_cont>
#if ORDERBY
  orderby P2_ASCENDING empno
#endif
all_emp;

cursor <emp_cont>
  where "$.empno > 10050"
#if ORDERBY
  orderby P2_ASCENDING empno
#endif
recent_emp;

cursor <emp_cont>
  where "$.age == 42"
#if 0
  orderby P2_ASCENDING empno
#endif
fourty_two_emp;
        
#endif

void main(void) 
{
  int                  loop;
  EMP_TYPE             *p;

  open_cont( emp_cont );
  init_curs( old_emp );
#if ALL_CURSORS
  init_curs( all_emp );
  init_curs( recent_emp );
  init_curs( fourty_two_emp );
#endif

  for (p = rawdata; p->empno != -1; p++) 
  {
#if ALL_CURSORS
      insert( all_emp, *p );
#else
      insert( old_emp, *p );
#endif
  }

#if ALL_CURSORS
  printf( "\nall emp are:\n"); 
  P2_ITERATOR( all_emp )
  {
    printf( "%d %d %s\n",
           all_emp.empno, 
           all_emp.age,
           all_emp.name );
  }
  printf( "\n42 emp are:\n");
  P2_ITERATOR( fourty_two_emp )
  {
    printf( "%d %d %s\n",
	   fourty_two_emp.empno, 
           fourty_two_emp.age,
	   fourty_two_emp.name );
  }
#endif

  printf( "\nold emp are:\n"); 
  P2_ITERATOR( old_emp )
  {
    printf( "%d %d %s\n",
	    old_emp.empno, 
            old_emp.age,
            old_emp.name );
#if DELETE
    delete( old_emp );
#endif
  }

  printf( "\nold emp are:\n"); 
  P2_ITERATOR( old_emp )
  {
    printf( "%d %d %s\n",
	   old_emp.empno,
	   old_emp.age,
	   old_emp.name );
  }

#if ALL_CURSORS
  printf( "\nremaining emp are:\n"); 
  P2_ITERATOR( all_emp )
  {
    printf( "%d %d %s\n",
	   all_emp.empno,
	   all_emp.age,
	   all_emp.name );
  }

  printf( "\nrecent emp are:\n");
  P2_ITERATOR( recent_emp )
  {
    printf( "%d %d %s\n",
	   recent_emp.empno,
	   recent_emp.age,
	   recent_emp.name );
  }
#endif

  close_cont( emp_cont );
  exit( 0 );
}
