/* $Id: xact07.p2,v 45.0 1997/09/19 05:45:31 jthomas Exp $ */
/* Copyright (C) 1997, The University of Texas at Austin. */

/* TID and conceptual type expression. */
/* This program demonstrates the orderby-log_tid_hack-qsort bug:
   Orderby requested on empno field, provided (by qsort) on age field. */

/* See explanation of bug and its solution in xact06.p2 (JAT) */

#include <stdio.h>
#include "P2_paces.h"

typedef struct {
   int   empno;
   int   age;
   char  dept_name[20];
   char  name[22];
} EMP_TYPE;

EMP_TYPE rawdata[] = {
   { 10000,60,"Biology","Akers, Mark" },
   { 10070,22,"Biology","Andrews, Kay" },
   { 10020,21,"Biology","Alexander, Joe" },
   { 10010,40,"Biology","Akin, Monica" },
   { 10050,42,"Biology","Akerson, Suzanne" },
   { 10040,53,"Biology","Akerson, Mary" },
   { 10060,61,"Biology","Andrews, John" },
   { 10030,23,"Biology","Akerson, Gwyn" },
   { -1 }
};

typex {
#if 0
  /* Debugging. */
  t = conceptual[P2_LOG_LAYER[xact[lock[process[delflag[array[transient]]]]]]];
#else
  t = P2_XACT_TYPEX(P2_PROTOCOL_LAYER, P2_BOTTOM_LAYER);
#endif
}

schema {
  container <EMP_TYPE> emp_cont;
} stored_as t with {
  P2_BOTTOM_SCHEMA_ANNOTE(emp_cont, age, 10);
} emp_schema;

cursor <emp_schema.emp_cont>
  orderby P2_DESCENDING empno
all_emp;

cursor <emp_schema.emp_cont>
  where "$.age > 40"
  orderby P2_ASCENDING age
old_emp;

void print_all_emp (void)
{
  P2_ITERATOR(all_emp)
  {
    printf("%d %d %s\n", all_emp.empno, all_emp.age, all_emp.name);
  }
}

int main (void) 
{
  int new_empno = 100000;

#if 0
  /* Initialize xact manager. */
  P2_init_xact_manager();
#endif

  open_schema(emp_schema);
  open_cont(emp_schema.emp_cont);
  init_curs(all_emp);
  init_curs(old_emp);

  /* Begin transaction. */

  begin_xact(emp_schema);

  /* Insert. */

  {
    EMP_TYPE *p;
    for (p = rawdata; p->empno != -1; p++) {
      insert(all_emp, *p);
    }
  }

  /* Update. */

  P2_ITERATOR(old_emp)
  {
    new_empno--;
    upd(old_emp, empno, new_empno);
  }

  /* Print. */
  /* Performs a reset_start(), thus sorting the array,
     thus an element's address cannot be used as it's TID. (JAT) */

  printf("insert and update before abort:\n");
  print_all_emp();

  /* Abort transaction. */

  abort_xact(emp_schema);

  /* Begin transaction. */

  begin_xact(emp_schema);

  /* Print. */

  printf("insert and update after abort:\n");
  print_all_emp();

  /* Commit transaction. */

  commit_xact(emp_schema);

  close_cont(emp_schema.emp_cont);
  close_schema(emp_schema);

#if 0
  /* Delete xact manager. */
  P2_delete_xact_manager();
#endif

  /* Exit */
  exit(0);
}
